%%% continuous regressors %%%
i = 1;
fitParams.regressors{i}.covariate = 'LEDOnset';
fitParams.regressors{i}.binSize = mainBoxSize; %seconds
fitParams.regressors{i}.tBefore = 0. ; %seconds
fitParams.regressors{i}.tAfter = 0.2; %seconds
fitParams.regressors{i}.description = 'Effect of LED onset';
fitParams.regressors{i}.bs = ...
    basisFactory.makeSmoothTemporalBasis('boxcar', ...
        fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter, ...
        (fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter)/fitParams.regressors{i}.binSize , ...
        expt.binfun);
%
i = i+1;
fitParams.regressors{i}.covariate = 'LEDDelay';
fitParams.regressors{i}.binSize = mainBoxSize; %seconds
fitParams.regressors{i}.tBefore = 0. ; %seconds
fitParams.regressors{i}.tAfter = 0.8; %seconds
fitParams.regressors{i}.description = 'Delayed effect of LED';
fitParams.regressors{i}.bs = ...
    basisFactory.makeSmoothTemporalBasis('boxcar', ...
        fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter, ...
        (fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter)/fitParams.regressors{i}.binSize , ...
        expt.binfun);
%
i = i+1;
fitParams.regressors{i}.covariate = 'soundOnset';
fitParams.regressors{i}.binSize = mainBoxSize ; %seconds
fitParams.regressors{i}.tBefore = 0. ; %seconds
fitParams.regressors{i}.tAfter = 0.2 ;
fitParams.regressors{i}.description = 'Effect of sound onset';
fitParams.regressors{i}.bs = ...
     basisFactory.makeSmoothTemporalBasis('boxcar', ...
         fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter, ...
         int16(round((fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter)/fitParams.regressors{i}.binSize)) , ...
         expt.binfun);
%
i = i+1;
fitParams.regressors{i}.covariate = 'soundDelay';
fitParams.regressors{i}.binSize = mainBoxSize ; %seconds
fitParams.regressors{i}.tBefore = 0. ; %seconds
fitParams.regressors{i}.tAfter = 0.8 ;
fitParams.regressors{i}.description = 'Delayed effect of sound onset';
fitParams.regressors{i}.bs = ...
     basisFactory.makeSmoothTemporalBasis('boxcar', ...
         fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter, ...
         int16(round((fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter)/fitParams.regressors{i}.binSize)) , ...
         expt.binfun);
%
i = i +1;
fitParams.regressors{i}.covariate = 'wOnset';
fitParams.regressors{i}.tBefore = 0. ; %seconds
fitParams.regressors{i}.tAfter = 0.1 ; %seconds
fitParams.regressors{i}.binSize = expt.binSize ; %seconds
fitParams.regressors{i}.description = 'Effect of whisker stimulus onset';
fitParams.regressors{i}.bs = ...
    basisFactory.makeSmoothTemporalBasis('boxcar', ...
        fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter, ...
        (fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter)/fitParams.regressors{i}.binSize , ...
        expt.binfun);
fitParams.wOnsetRIndex = i;
%
i = i+1;
fitParams.regressors{i}.covariate = 'wDelay';
fitParams.regressors{i}.tBefore = 0. ; %seconds
fitParams.regressors{i}.tAfter = 0.9 ; %seconds
fitParams.regressors{i}.binSize = 0.1; %seconds
fitParams.regressors{i}.description = 'Effect of whisker stimulus - delay';
fitParams.regressors{i}.bs = ...
  basisFactory.makeSmoothTemporalBasis('boxcar', ...
        fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter, ...
        (fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter)/fitParams.regressors{i}.binSize , ...
        expt.binfun);
%
i = i+1;
fitParams.regressors{i}.covariate = 'lickOnsetPre';
fitParams.regressors{i}.tBefore = 0.2 ; %seconds
fitParams.regressors{i}.tAfter = 0. ; %seconds
fitParams.regressors{i}.binSize = mainBoxSize ; %seconds
fitParams.regressors{i}.description = 'Effect of licking preparation';
fitParams.regressors{i}.bs = ...
   basisFactory.makeSmoothTemporalBasis('boxcar', ...
       fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter, ...
       (fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter)/fitParams.regressors{i}.binSize , ...
       expt.binfun);
fitParams.lickOnsetPreRIndex = i;
%
i = i+1;
fitParams.regressors{i}.covariate = 'lickOnsetPost';
fitParams.regressors{i}.tBefore = 0. ; %seconds
fitParams.regressors{i}.tAfter = 0.2 ; %seconds
fitParams.regressors{i}.binSize = mainBoxSize ; %seconds
fitParams.regressors{i}.description = 'Early effect licking';
fitParams.regressors{i}.bs = ...
    basisFactory.makeSmoothTemporalBasis('boxcar', ...
        fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter, ...
        (fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter)/fitParams.regressors{i}.binSize , ...
        expt.binfun);
%
i = i+1;
fitParams.regressors{i}.covariate = 'lickOnsetDelay';
fitParams.regressors{i}.tBefore = 0. ; %seconds
fitParams.regressors{i}.tAfter = 0.8 ; %seconds
fitParams.regressors{i}.binSize = mainBoxSize ; %seconds
fitParams.regressors{i}.description = 'Delayed effect licking';
fitParams.regressors{i}.bs = ...
    basisFactory.makeSmoothTemporalBasis('boxcar', ...
        fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter, ...
        (fitParams.regressors{i}.tBefore + fitParams.regressors{i}.tAfter)/fitParams.regressors{i}.binSize , ...
        expt.binfun);
%

%%% Define regressor groups for smoothness purposes %%%
fitParams.regrGroups = {[1,2],[3,4],[5,6],[7],[8,9],[10],[11],[12],[13],[14],[15],[16]};
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

